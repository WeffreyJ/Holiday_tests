/*
    The code in this file uses open source libraries provided by thecoderscorner

    DO NOT EDIT THIS FILE, IT WILL BE GENERATED EVERY TIME YOU USE THE UI DESIGNER
    INSTEAD EITHER PUT CODE IN YOUR SKETCH OR CREATE ANOTHER SOURCE FILE.

    All the variables you may need access to are marked extern in this file for easy
    use elsewhere.
 */

// Generated for Arduino AVR/Uno/Mega by TcMenu 4.4.0 on 2025-01-06T01:34:25.603643900Z.

#include <tcMenu.h>
#include "menutraintest2_menu.h"
#include "ThemeMonoBorderedBuilder.h"

// Global variable declarations
const PROGMEM  ConnectorLocalInfo applicationInfo = { "menutraintest2", "b6df553c-d1b5-4695-aae4-3429a352375f" };

U8G2_SSD1306_128X64_NONAME_F_SW_I2C gfx(U8G2_R0, U8X8_PIN_NONE, U8X8_PIN_NONE, U8X8_PIN_NONE);
U8g2Drawable gfxDrawable(&gfx);
GraphicsDeviceRenderer renderer(30, applicationInfo.name, &gfxDrawable);

// Global Menu Item declarations
const PROGMEM SubMenuInfo minfoErrorLog = { "Error Log", 5, 0xffff, 0, NO_CALLBACK };
BackMenuItem menuBackErrorLog(&minfoErrorLog, nullptr, INFO_LOCATION_PGM);
SubMenuItem menuErrorLog(&minfoErrorLog, &menuBackErrorLog, nullptr, INFO_LOCATION_PGM);
const PROGMEM SubMenuInfo minfoParameterGraph = { "Parameter Graph", 4, 0xffff, 0, NO_CALLBACK };
BackMenuItem menuBackParameterGraph(&minfoParameterGraph, nullptr, INFO_LOCATION_PGM);
SubMenuItem menuParameterGraph(&minfoParameterGraph, &menuBackParameterGraph, nullptr, INFO_LOCATION_PGM);
const PROGMEM SubMenuInfo minfoSensorValues = { "Sensor Values", 3, 0xffff, 0, NO_CALLBACK };
BackMenuItem menuBackSensorValues(&minfoSensorValues, &menuParameterGraph, INFO_LOCATION_PGM);
SubMenuItem menuSensorValues(&minfoSensorValues, &menuBackSensorValues, &menuErrorLog, INFO_LOCATION_PGM);
const PROGMEM SubMenuInfo minfoCustomCalibrate = { "Custom Calibrate", 2, 0xffff, 0, NO_CALLBACK };
BackMenuItem menuBackCustomCalibrate(&minfoCustomCalibrate, nullptr, INFO_LOCATION_PGM);
SubMenuItem menuCustomCalibrate(&minfoCustomCalibrate, &menuBackCustomCalibrate, nullptr, INFO_LOCATION_PGM);
const PROGMEM SubMenuInfo minfoOperationMode = { "Operation Mode", 1, 0xffff, 0, NO_CALLBACK };
BackMenuItem menuBackOperationMode(&minfoOperationMode, &menuCustomCalibrate, INFO_LOCATION_PGM);
SubMenuItem menuOperationMode(&minfoOperationMode, &menuBackOperationMode, &menuSensorValues, INFO_LOCATION_PGM);

void setupMenu() {
    // First we set up eeprom and authentication (if needed).
    setSizeBasedEEPROMStorageEnabled(true);
    // Code generated by plugins and new operators.
    gfx.begin();
    renderer.setUpdatesPerSecond(10);
    switches.init(internalDigitalIo(), SWITCHES_POLL_EVERYTHING, true);
    menuMgr.initForEncoder(&renderer, &menuOperationMode, 2, 3, 8);
    installMonoBorderTitleTheme(renderer, MenuFontDef(nullptr, 1), MenuFontDef(nullptr, 1), true, BaseGraphicalRenderer::TITLE_FIRST_ROW, false);
}

